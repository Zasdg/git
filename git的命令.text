配置git(版本管理)
git -v
git config --global user.name "" 配置用户
git config --global usser.email "" 配置邮箱
使用git
未跟踪和已跟踪
git status 查看当前仓库的状态
第一步：git init 初始化仓库(会生成一个git文件)
git add 文件名称 未跟踪--->将文件变成暂存
git add * 所有
git commit -m "xxx" 将暂存的文件存储到仓库 暂存-->未修改
修改文件后会变成已修改
git log 查看日志
git commit -a -m "" 提交所有已修改的文件(要已跟踪)
git restore 文件路径 恢复文件
git rm 文件路径(-f) 强制删除 删除
git restore --staged 文件路径 取消文件暂存状态
git mv from to 重命名
git branch 查看分支
git branch 分支名 创建分支
git branch -d 分支名 删除分支
git switch 分支名 切换分支
git switch -c 分支名  创建并切换分支
git merge 分支名 快速合并分支·
git rebase 分支名 变基
远程仓库(remote)
git remote add 库名(任意取名) url 将库传到服务器
git push -u origin main 将代码传到服务器
git branch -M mian 将分支的名字改成main
git remote 显示当前关联的远程库
git remote remove 库名 删除远程库
git push -u 远程库名 分支名 向远程库推送代码，并和分支关联
git clone 远程库名 从远程库上克隆
如果本地的版本低于远程库 push默认是推送不上去
git fetch 下载远程库的代码但不会合并分支所有要手动合并
git merge 远程库名/本地分支
想要推送代码一定要先拉取最新代码